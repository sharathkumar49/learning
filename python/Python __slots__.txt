What is the purpose of the '__slots__' attribute in Python classes?



The '__slots__' attribute in Python classes is used to explicitly declare a fixed set of instance attributes for a class. When you define '__slots__' in a class, you are telling Python to allocate only enough memory to store the specified attributes, potentially saving memory and improving performance.

By default, when you create an instance of a Python class, Python creates a dictionary to store the instance attributes. This allows for flexibility because you can add new attributes to instances dynamically. However, the dictionary-based attribute storage comes with some overhead in terms of memory and access time.

When you use '__slots__', Python allocates a fixed amount of memory for the specified attributes directly on the instance itself, rather than using a dictionary. This can reduce memory overhead and improve attribute access time, especially for classes with a large number of instances.

Here's a basic example of using '__slots__':


class MyClass:
    '__slots__' = ['attribute1', 'attribute2']

    def __init__(self, attr1, attr2):
        self.attribute1 = attr1
        self.attribute2 = attr2

obj = MyClass(10, 20)
print(obj.attribute1)  # Output: 10
print(obj.attribute2)  # Output: 20


In this example, MyClass is defined with '__slots__' containing two attributes, attribute1 and attribute2. When instances of MyClass are created, memory is allocated only for these two attributes, and attempts to assign or access other attributes will result in an AttributeError.

It's important to note a few considerations when using '__slots__':

'__slots__' is an optimization technique and should only be used when memory usage and attribute access performance are significant concerns.
Subclasses do not inherit the '__slots__' attribute from their parent class, unless explicitly defined.
When defining '__slots__', remember to include all instance attributes that the class will have. Adding new attributes dynamically after '__slots__' are defined will raise an AttributeError.
'__slots__' does not prevent the creation of instance methods or class attributes. It only affects instance attribute storage.