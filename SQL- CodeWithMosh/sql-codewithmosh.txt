

code with mosh sql:
===================

Let's start with a quick overview of Databases, what they are and how we use them. A database is a collection of data stored in a format that can easily be accessed. In order to manage our Databases, we use a software application called Database Management System or DBMS. We connect to a DBMS and give it instructions for querying or modifying data. The DBMS will execute our instructions and send results back. 

Now, we have several database management systems out there, and these are classified into two categories. 
Relational and non-relational, also called NoSQL. In Relational Databases, we store data in tables that are linked to each other using relationships. That's why we call these databases Relational Databases. Each table stores data about a specific type of object, like customer, product, order, and so on. 
SQL is the language that we use to work with these Relational Database Management Systems. It looks like this. 

SELECT *
FROM products
WHERE category = 'food'
ORDER BY price


We use SQL to query or modify our data. In this course, you're going to learn everything about this powerful language. Now, there are many different Relational database management systems out there. Some of the most popular ones are MySQL, SQL Server by Microsoft, and Oracle. But of course, there are plenty more. Each Database management system has a different flavor of SQL, But all these implementations are very similar and are based on the standard SQL specification. So most of the SQL code that you will learn in this course will work with any Database Management system. In this course, we'll be using MySQL, which is the most popular open source Database in the world. 

Alright, Now, What about Non-relational databases? In Non-relational databases, we don't have tables or relationships. These databases are very different from Relational databases, but that's a topic for an entirely different course. What you need to know is that Non-relational Database Management Systems don't understand SQL. They have their own query language. So we use SQL to work with Relational Database Management Systems. 

Now, before we jump in and install MySQL, let me clarify something quickly. As you talk to different people, you will hear two different pronunciations of SQL, SQL or Sequel. What is the correct way? Well, it depends on who you ask. And of course, everybody thinks their way of pronouncing this word is the right way. But here's a little history about this language. 
SQL was originally developed at IBM in the 70s, and back then it was initially called SeQuEL, short for Structured English Query Language. But they changed the acronym to SQL because Sequel was the trademark of an airplane company. So to this date, there's been an argument about what is the right way to pronounce this language. Generally speaking, people in non-English speaking countries call it SQL. I'm used to calling it SQL because it's shorter and sweeter than SQL. But if you prefer to call it SQL, that's totally fine with me. I'm not going to get mad at you. So that's the history behind this language. But what about MySQL as a software product? Developers of this product prefer to call it MySQL rather than MySQL, but they don't mind if we call it MySQL. 
In this course, I'll be teaching you SQL with MySQL.
 
 

