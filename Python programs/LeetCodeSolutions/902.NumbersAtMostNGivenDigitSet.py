"""
902. Numbers At Most N Given Digit Set
https://leetcode.com/problems/numbers-at-most-n-given-digit-set/

Given an array of strings digits which is sorted in non-decreasing order and an integer n, return the number of positive integers that can be generated that are less than or equal to n, where each integer is generated by using digits from digits (with repetition allowed).

Constraints:
- 1 <= digits.length <= 9
- digits[i].length == 1
- '1' <= digits[i] <= '9'
- All the values in digits are unique.
- 1 <= n <= 10^9

Example:
Input: digits = ["1","3","5","7"], n = 100
Output: 20
"""
from typing import List

class Solution:
    def atMostNGivenDigitSet(self, digits: List[str], n: int) -> int:
        S = str(n)
        K = len(S)
        dp = [0] * (K+1)
        dp[K] = 1
        for i in range(K-1, -1, -1):
            for d in digits:
                if d < S[i]:
                    dp[i] += len(digits) ** (K-i-1)
                elif d == S[i]:
                    dp[i] += dp[i+1]
        res = sum(len(digits) ** i for i in range(1, K)) + dp[0]
        return res

# Example usage
if __name__ == "__main__":
    digits = ["1","3","5","7"]
    n = 100
    print(Solution().atMostNGivenDigitSet(digits, n))  # Output: 20
